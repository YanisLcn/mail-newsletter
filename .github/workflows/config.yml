on: push
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: staging_environment
    steps:
      - uses: actions/checkout@v4
      - name: Version information
        run:
          rustc --version; cargo --version; rustup --version

      # If you have committed your Cargo.lock file to version control
      # delete this step.
      - name: Calculate dependencies
        run: cargo generate-lockfile

      - name: Build all targets
        run: cargo build

      - name: Run all tests
        run: cargo test

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Version information
        run: rustc --version; cargo --version; rustup --version
        
      - name: Cache permission
        run: sudo chown -R $(whoami):$(id -ng) /home/circleci/.cargo/bin/cargo

      - name: Install dependency auditing tool
        run: cargo install cargo-audit

      - name: Check for known security issues in dependencies
        run: cargo audit

  # format:
  #   docker:
  #     - image: cimg/rust:1.69
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - run:
  #         name: Version information
  #         command: rustc --version; cargo --version; rustup --version
  #     - run:
  #         name: Install formatter
  #         command: rustup component add rustfmt
  #     - run:
  #         name: Formatting
  #         command: cargo fmt --all -- --check
  #
  # lint:
  #   docker:
  #     - image: cimg/rust:1.69
  #   steps:
  #     - uses: actions/checkout@v4
  #     - run:
  #         name: Version information
  #         command: rustc --version; cargo --version; rustup --version
  #     - run:
  #         name: Install Clippy
  #         command: rustup component add clippy
  #     - run:
  #         name: Linting
  #         command: cargo clippy -- -D warnings
  #
  # coverage:
  #   machine: true
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: acrions/checkout@v4
  #     - run:
  #         name: Coverage with docker
  #         command: docker run --security-opt seccomp=unconfined -v "${PWD}:/volume" xd009642/tarpaulin cargo tarpaulin --ignore-tests

# workflows:
#   version: 2
#   build-test:
#     jobs:
#       - build-and-test:
#           filters:
#             tags:
#               only: /.*/
      # - security:
      #     filters:
      #       tags:
      #         only: /.*/
      # - format:
      #     filters:
      #       tags:
      #         only: /.*/
      # - lint:
      #     filters:
      #       tags:
      #         only: /.*/
      # - coverage:
      #     filters:
      #       tags:
      #         only: /.*/

